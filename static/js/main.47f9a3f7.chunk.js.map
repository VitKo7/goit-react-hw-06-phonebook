{"version":3,"sources":["components/App.module.css","components/contact-list-item/ContactListItem.module.css","components/contact-list/ContactList.module.css","components/filter/Filter.module.css","components/contact-form/ContactForm.jsx","redux/contacts/contacts-actions.js","components/contact-list-item/ContactListItem.jsx","components/contact-list/ContactList.jsx","components/filter/Filter.jsx","components/App.jsx","redux/store.js","index.js","components/contact-form/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInput","event","target","value","setState","handleSubmit","preventDefault","entryCheck","props","contacts","find","contact","alert","length","contactNew","id","nanoid","createContact","resetForm","this","onSubmit","className","styles","addContactForm","label","type","placeholder","input","onChange","pattern","text","btnAdd","Component","mapDispatchToProps","payload","connect","handleRemove","data-id","onClick","btnDelete","getFilteredContacts","filter","toLowerCase","includes","list","map","contactListItem","item","autoComplete","App","container","contactsTitle","initialState","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47f9a3f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__w4DnA\",\"contacts\":\"App_contacts__xo3vi\",\"contactsTitle\":\"App_contactsTitle__ay-9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactListItem_btnDelete__1xqAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1onB1\",\"contactListItem\":\"ContactList_contactListItem__peSS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3lw9u\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createContact } from '../../redux/contacts/contacts-actions';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInput = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const entryCheck = this.props.contacts.find(\r\n      contact => contact.name === name || contact.number === number,\r\n    );\r\n\r\n    if (entryCheck) {\r\n      alert(\r\n        `Either '${entryCheck.name}' or '${entryCheck.number}' already exists`,\r\n      );\r\n      // this.resetForm();\r\n    } else if (name.length === 0 || number.length === 0) {\r\n      alert(`Please, fill in all the fields`);\r\n      // this.resetForm();\r\n    } else {\r\n      const contactNew = {\r\n        // id: uuidv4(),\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n      };\r\n      this.props.createContact(contactNew);\r\n    }\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.addContactForm}>\r\n          <label className={styles.label}>Name:</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Name Surname\"\r\n            className={styles.input}\r\n            onChange={this.handleInput}\r\n            value={name}\r\n          />\r\n          <label className={styles.label}>Number:</label>\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            placeholder=\"123-456\"\r\n            pattern=\"[0-9]{3}-[0-9]{3}\"\r\n            className={styles.input}\r\n            onChange={this.handleInput}\r\n            value={number}\r\n          />\r\n          <span className={styles.text}>\r\n            <i>Use this format only:</i> xxx-xxx\r\n          </span>\r\n          <button type=\"submit\" className={styles.btnAdd}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","export const handleInput = item => ({\r\n  type: 'contacts/handleInput',\r\n  payload: item,\r\n});\r\n\r\nexport const createContact = contact => ({\r\n  type: 'contacts/createContact',\r\n  payload: contact,\r\n});\r\n\r\nexport const handleRemove = id => ({\r\n  type: 'contacts/handleRemove',\r\n  payload: id,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { handleRemove } from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, handleRemove }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.contact}>\r\n        {name}: {number}\r\n      </p>\r\n\r\n      <button\r\n        data-id={id}\r\n        onClick={event => handleRemove(id)}\r\n        type=\"button\"\r\n        className={styles.btnDelete}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  // contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleRemove,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../contact-list-item/ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <div className=\"contactsList\">\r\n      {contacts.length === 0 ? (\r\n        <p>There are no contacts here yet ...</p>\r\n      ) : (\r\n        <ul className={styles.list}>\r\n          {contacts.map(contact => (\r\n            <li className={styles.contactListItem} key={contact.id}>\r\n              <ContactListItem {...contact} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  // onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = state => {\r\n  const { filter, contacts } = state;\r\n  // const { contacts } = this.state;\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { handleInput } from '../../redux/contacts/contacts-actions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ contacts, filter, handleInput }) => {\r\n  return (\r\n    <>\r\n      {contacts.length < 2 ? (\r\n        <span> </span>\r\n      ) : (\r\n        <div className=\"contactsFilter\">\r\n          <p>Find contacts by name:</p>\r\n          <input\r\n            name=\"filter\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            className={styles.input}\r\n            onChange={event => handleInput(event.target.value)}\r\n            value={filter}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleInput: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.filter,\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleInput,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './contact-form/ContactForm';\r\nimport ContactList from './contact-list/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   const contacts = localStorage.getItem('contacts');\r\n  //   const parsedContacts = JSON.parse(contacts);\r\n\r\n  //   if (parsedContacts) {\r\n  //     this.setState({ contacts: [...parsedContacts] });\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate(_, prevState) {\r\n  //   if (this.state.contacts !== prevState.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h2>Phonebook</h2>\r\n        <ContactForm />\r\n\r\n        <div className={styles.contacts}>\r\n          <h3 className={styles.contactsTitle}>Contacts</h3>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst initialState = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  filter: '',\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'contacts/handleInput':\r\n      return {\r\n        ...state,\r\n        filter: payload,\r\n      };\r\n\r\n    case 'contacts/createContact':\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, payload],\r\n      };\r\n\r\n    case 'contacts/handleRemove':\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts.filter(contact => contact.id !== payload)],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"ContactForm_addContactForm__3NBuZ\",\"label\":\"ContactForm_label__2CmAu\",\"input\":\"ContactForm_input__2kpWq\",\"text\":\"ContactForm_text__2w0C_\",\"btnAdd\":\"ContactForm_btnAdd__2vADF\"};"],"sourceRoot":""}